{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++-11 build active file",
            "command": "./build.sh",
            "args": [
                "-d",
                "${fileDirname}"
            ],
            "options": {
                "cwd": "${workspaceFolder}/main_ros2/casadi_mpc"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "label": "Build and Run (BUILD_MODE=release -O3)",
            "type": "shell",
            "command": "./build.sh",
            "args": [
                "-r",
                "${fileDirname}"
            ],
            "options": {
                "cwd": "${workspaceFolder}/main_ros2/casadi_mpc"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "Run Build (No Debug Info)"
            ],
            "detail": "Build and run the project without debug info."
        },
        {
            "label": "Run Program",
            "type": "shell",
            "command": "${fileDirname}/main",
            "dependsOn": [
                "Build and Run (BUILD_MODE=release -O3)"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "Build MPC Shared Libraries",
            "command": "for file in ${workspaceFolder}/s_functions/fr3_no_hand_6dof/mpc_c_sourcefiles/MPC*.c; do gcc -shared -fPIC -o ${workspaceFolder}/s_functions/fr3_no_hand_6dof/mpc_c_sourcefiles/lib$(basename ${file%.*}).so $file -I${workspaceFolder}/s_functions/fr3_no_hand_6dof/mpc_c_sourcefiles; done",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "label": "Build ROS2 Workspace",
            "type": "shell",
            "command": "colcon build --symlink-install",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Clean ROS2 Workspace",
            "type": "shell",
            "command": "rm -rf build install log",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "colcon: build (debug)",
            "type": "shell",
            "command": [
            "source ${env:_colcon_cd_root}/setup.bash;",
            "cd ${workspaceFolder}/main_ros2/franka_ros2_ws;",
            "colcon build --cmake-args -DCMAKE_BUILD_TYPE=Debug -DCMAKE_VERBOSE_MAKEFILE=ON"
            ],
            "problemMatcher": [],
            "group": {
            "kind": "build",
            "isDefault": true
            }
        },
        {
            "label": "ROS2: Launch",
            "type": "shell",
            "command": [
                "source $masterdir/main_ros2/franka_ros2_ws/install/setup.bash;",
                "ros2 launch franka_bringup mpc_casadi_controller.launch.py arm_id:=fr3 robot_ip:=${env:robot_ip}"
            ],
            "dependsOn": [
            "colcon: build (debug)"
            ],
            "group": {
            "kind": "test",
            "isDefault": true
            }
        },
        {
            "label": "colcon: clean",
            "type": "shell",
            "command": [
                "cd project-workspace;",
                "rm -rf build/ install/ log/;"
            ]
        },
        {
            "label": "colcon: test",
            "type": "shell",
            "command": [
                "cd ${workspaceFolder}/main_ros2/franka_ros2_ws;",
                "source ${env:_colcon_cd_root}/setup.bash;",
                "source install/setup.bash;",
                "colcon test",
                "--packages-select <package-name>",
                "--event-handlers console_direct+;"
            ]
        }
    ]
}