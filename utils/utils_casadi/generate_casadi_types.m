function generate_casadi_types(filename)
% generate_casadi_types - Generates a C header file for CasADi types.
    % Default filename if not provided
    if nargin < 1 || isempty(filename)
        filename = 'casadi_types.h';
    end

    filename_fin = filename;
    filename = [filename_fin, '_tmp'];
    
    % Open the file for writing
    fid = fopen(filename, 'w');

    % Check if the file opened successfully
    if fid == -1
        error('Error opening file: %s', filename);
    end

    fprintf(fid, '/* Automatically generated by MATLAB (generate_casadi_types.m) */\n');
    fprintf(fid, '/* Do not edit this file. To regenerate, run "mpc_casdadi_main.m" with "generate_realtime_udp_c_fun=true" */\n\n');

    fprintf(fid, '#ifndef casadi_types_H\n');
    fprintf(fid, '#define casadi_types_H\n\n');

    fprintf(fid, '#ifdef __cplusplus\n');
    fprintf(fid, 'extern "C" {\n');
    fprintf(fid, '#endif\n\n');

    fprintf(fid, '#include <stdint.h>\n\n');

    % Write the content to the header file
    fprintf(fid, '#ifndef Inf\n');
    fprintf(fid, '#include <math.h>\n\n');
    fprintf(fid, '#define Inf INFINITY\n');
    fprintf(fid, '#endif\n\n');

    fprintf(fid, '#ifndef casadi_real\n');
    fprintf(fid, '#define casadi_real double\n');
    fprintf(fid, '#endif\n\n');

    fprintf(fid, '#ifndef casadi_int\n');
    fprintf(fid, '#define casadi_int long long int\n');
    fprintf(fid, '#endif\n\n');

    fprintf(fid, '#ifndef casadi_uint\n');
    fprintf(fid, '#define casadi_uint uint32_t\n');
    fprintf(fid, '#endif\n\n');

    % create function pointer
    % typedef int (*CasadiFunPtr_t)(const casadi_real **arg, casadi_real **res, casadi_int *iw, casadi_real *w, int mem);
    fprintf(fid, '\ntypedef int (*CasadiFunPtr_t)(const casadi_real **arg, casadi_real **res, casadi_int *iw, casadi_real *w, int mem);\n');
    fprintf(fid, '\ntypedef void (*CasadiSetPtr_t)(casadi_real *const w, const casadi_real *const data);\n');
    fprintf(fid, '\ntypedef void (*CasadiGetPtr_t)(const casadi_real *const w, casadi_real *const data);\n');
    fprintf(fid, '\ntypedef void (*CasadiPrevOutPtr_t)(casadi_real *const w);\n\n');

    fprintf(fid, '#ifdef __cplusplus\n');
    fprintf(fid, '}\n');
    fprintf(fid, '#endif\n\n');

    fprintf(fid, '#endif // casadi_types_H\n');

    % Close the file
    fclose(fid);

    % Check whether Header file was changed
    if ~exist(filename_fin, 'file') || ~isequal(fileread(filename), fileread(filename_fin))
        movefile(filename, filename_fin, 'f');
        fprintf(2, 'Header file %s has been updated.\n', filename_fin);
    else
        fprintf('Header file %s unchanged.\n', filename_fin);
        delete(filename);
    end
end